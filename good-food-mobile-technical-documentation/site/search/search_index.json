{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue sur GOOD FOOD V2 Hierarchie mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. installation.md architecture.md Installation de l'environnement de l'application mobile Pr\u00e9requis NodeJS # Contenant \u00e9galement le gestionnaire de paquet NPM. Expo # Pour \u00e9muler l'application mobile sur vos devices Android et IOS Installer \"Expo CLI\" : npm install -g expo-cli Cr\u00e9ation du projet React-Native avec Expo * ### Commandes \u00e0 taper dans le terminal ```expo init GoodFood``` ```cd GoodFood``` ```npm start``` # On peut aussi utiliser expo start Cela d\u00e9marrera un serveur pour nous * ### Visualiser le projet sur son device * Installer Expo sur son device * Ouvrir Expo et flasher le QRcode g\u00e9n\u00e9r\u00e9 par la commande npm start (Pour IOS, utiliser le lecteur de QRcode int\u00e9gr\u00e9 \u00e0 l'appareil photo) C'est tout ! Il suffit maintenant de modifier le fichier App.js pour commencer \u00e0 d\u00e9velopper l'application et voir en temps r\u00e9el les changements effectu\u00e9s. Les d\u00e9pendences install\u00e9es Afin de g\u00e9rer la gestion de l'application Good Food, les d\u00e9pendances contenues dans le fichier package.json sont \u00e0 installer \u00e0 l'aide de la commande npm install Exemple du fichier package.json : { \"name\": \"goodfood\", \"version\": \"1.0.0\", \"main\": \"node_modules/expo/AppEntry.js\", \"scripts\": { \"start\": \"expo start\", \"android\": \"expo start --android\", \"ios\": \"expo start --ios\", \"web\": \"expo start --web\", \"eject\": \"expo eject\" }, \"dependencies\": { \"@react-navigation/native\": \"^6.0.8\", \"@react-navigation/native-stack\": \"^6.5.0\", \"expo\": \"~44.0.0\", \"expo-status-bar\": \"~1.2.0\", \"react\": \"17.0.1\", \"react-dom\": \"17.0.1\", \"react-hook-form\": \"^7.27.1\", \"react-native\": \"0.64.3\", \"react-native-safe-area-context\": \"3.3.2\", \"react-native-screens\": \"~3.10.1\", \"react-native-web\": \"0.17.1\" }, \"devDependencies\": { \"@babel/core\": \"^7.12.9\", \"@types/jest\": \"^27.4.0\", \"@types/react\": \"^17.0.39\", \"@types/react-native\": \"^0.66.16\", \"@types/react-test-renderer\": \"^17.0.1\" }, \"private\": true }","title":"Bienvenue sur GOOD FOOD V2"},{"location":"#bienvenue-sur-good-food-v2","text":"","title":"Bienvenue sur GOOD FOOD V2"},{"location":"#hierarchie","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. installation.md architecture.md","title":"Hierarchie"},{"location":"#installation-de-lenvironnement-de-lapplication-mobile","text":"","title":"Installation de l'environnement de l'application mobile"},{"location":"#prerequis","text":"NodeJS # Contenant \u00e9galement le gestionnaire de paquet NPM. Expo # Pour \u00e9muler l'application mobile sur vos devices Android et IOS Installer \"Expo CLI\" : npm install -g expo-cli","title":"Pr\u00e9requis"},{"location":"#creation-du-projet-react-native-avec-expo","text":"* ### Commandes \u00e0 taper dans le terminal ```expo init GoodFood``` ```cd GoodFood``` ```npm start``` # On peut aussi utiliser expo start Cela d\u00e9marrera un serveur pour nous * ### Visualiser le projet sur son device * Installer Expo sur son device * Ouvrir Expo et flasher le QRcode g\u00e9n\u00e9r\u00e9 par la commande npm start (Pour IOS, utiliser le lecteur de QRcode int\u00e9gr\u00e9 \u00e0 l'appareil photo) C'est tout ! Il suffit maintenant de modifier le fichier App.js pour commencer \u00e0 d\u00e9velopper l'application et voir en temps r\u00e9el les changements effectu\u00e9s.","title":"Cr\u00e9ation du projet React-Native avec Expo"},{"location":"#les-dependences-installees","text":"Afin de g\u00e9rer la gestion de l'application Good Food, les d\u00e9pendances contenues dans le fichier package.json sont \u00e0 installer \u00e0 l'aide de la commande npm install Exemple du fichier package.json : { \"name\": \"goodfood\", \"version\": \"1.0.0\", \"main\": \"node_modules/expo/AppEntry.js\", \"scripts\": { \"start\": \"expo start\", \"android\": \"expo start --android\", \"ios\": \"expo start --ios\", \"web\": \"expo start --web\", \"eject\": \"expo eject\" }, \"dependencies\": { \"@react-navigation/native\": \"^6.0.8\", \"@react-navigation/native-stack\": \"^6.5.0\", \"expo\": \"~44.0.0\", \"expo-status-bar\": \"~1.2.0\", \"react\": \"17.0.1\", \"react-dom\": \"17.0.1\", \"react-hook-form\": \"^7.27.1\", \"react-native\": \"0.64.3\", \"react-native-safe-area-context\": \"3.3.2\", \"react-native-screens\": \"~3.10.1\", \"react-native-web\": \"0.17.1\" }, \"devDependencies\": { \"@babel/core\": \"^7.12.9\", \"@types/jest\": \"^27.4.0\", \"@types/react\": \"^17.0.39\", \"@types/react-native\": \"^0.66.16\", \"@types/react-test-renderer\": \"^17.0.1\" }, \"private\": true }","title":"Les d\u00e9pendences install\u00e9es"},{"location":"architecture/","text":"Architecture des dossiers de travail Les principaux dossiers sources ../App.js ./src/ : components navigation screens ./assets D\u00e9finition des dossiers ../App.js est le point d'entr\u00e9e de l'application mobile quand elle est lanc\u00e9e ./src/ : components Sont toutes les parties autonomes des screens (CustomInput, Logo, CustomButton,...). Un component g\u00e9rera son affichage, son style et son export. navigation Contient un fichier index.js renseignant tout les screens de l'application mobile qui seront affich\u00e9s. screens Un screen est un 'template' sur lequel on vient charger des components. ./assets Le dossier des assets contiendra les images","title":"Architecture des dossiers de travail"},{"location":"architecture/#architecture-des-dossiers-de-travail","text":"","title":"Architecture des dossiers de travail"},{"location":"architecture/#les-principaux-dossiers-sources","text":"../App.js ./src/ : components navigation screens ./assets","title":"Les principaux dossiers sources"},{"location":"architecture/#definition-des-dossiers","text":"../App.js est le point d'entr\u00e9e de l'application mobile quand elle est lanc\u00e9e ./src/ : components Sont toutes les parties autonomes des screens (CustomInput, Logo, CustomButton,...). Un component g\u00e9rera son affichage, son style et son export. navigation Contient un fichier index.js renseignant tout les screens de l'application mobile qui seront affich\u00e9s. screens Un screen est un 'template' sur lequel on vient charger des components. ./assets Le dossier des assets contiendra les images","title":"D\u00e9finition des dossiers"}]}